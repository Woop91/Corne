/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&nice_view_spi {
    cs-gpios = <&pro_micro 0 GPIO_ACTIVE_HIGH>;
};

/ {
    combos {
        compatible = "zmk,combos";
    };

    behaviors {
        // del/backspace functionality for layer keys

        km: keypress_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "KEYPRESS_LAYER";
            bindings =
                <&mo>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "hold-preferred";
        };

        // simple caps shift toggle

        cs: caps_shift {
            compatible = "zmk,behavior-tap-dance";
            label = "CAPS_SHIFT";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&kp LSHFT>,
                <&kp CAPS>;
        };

        // different homerow mods durations for index vs secondary fingers (pinkies lol)

        hms: homerow_mods_short {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_SHORT";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
        hml: homerow_mods_long {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LONG";
            #binding-cells = <2>;
            tapping-term-ms = <210>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };

        // adds tab behavior on semicolon when alt is held down (specifically for use with homerow mods)
        // sc_tab: semicolon_tab {
        //     compatible = "zmk,behavior-mod-morph";
        //     label = "SEMICOLON_TAB";
        //     #binding-cells = <0>;
        //     bindings = <&kp SEMI>, <&kp TAB>;
        //     mods = <(MOD_LALT|MOD_RALT)>;
        //     keep-mods = <(MOD_LALT)>;
        // };
        // Uses nested hold tap inside of tap dance
        // bth: backspace_tap_raise_hold {
        //     compatible = "zmk,behavior-tap-dance";
        //     label = "TAP_DANCE_0";
        //     #binding-cells = <0>;
        //     tapping-term-ms = <200>;
        //     bindings =
        //         <&km 2 BSPC>,
        //         <&kp BSPC>;
        // };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  `  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  ;  |  ]  |
            // |  =  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  P  |  '  |
            // |  -  |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  |  [  |
            //                   | BTL | LWR | SPC |   | ENT | RSE |     |

            label = "moto";

            //元, default layer

            bindings = <
       &kp GRAVE  &kp Q        &kp W         &kp E         &kp R      &kp T      &kp Y         &kp U          &kp I        &kp O  &kp SEMI  &hms BSPC LBKT
&hml LCTRL EQUAL  &kp A  &hml LALT S  &hms LCTRL D  &hms LSHFT F      &kp G      &kp H  &hms RSHFT J   &hms RCTRL K  &hml LALT L     &kp P         &kp SQT
&hml LSHFT MINUS  &kp Z        &kp X         &kp C         &kp V      &kp B      &kp N         &kp M      &kp COMMA      &kp DOT  &kp FSLH        &kp RBKT
                                        &km 3 LGUI     &km 1 DEL  &kp SPACE    &kp RET    &km 2 BSPC  &kp LA(LSHFT)
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | CTRL |     |     |     |     | TAB |   |     |  [  |  ]  |  '  |  ;  |  ~   |
            // | SHFT |  =  |  -  |  `  |  _  | ESC |   |     | PRV | PLY | NXT |  \  |  `   |
            //                    |     |     | SPC |   | ENT |     |     |

            label = "shita";

            //下, lower

            bindings = <
&trans     &kp N1     &kp N2     &kp N3     &kp N4     &kp N5     &kp N6      &kp N7            &kp N8      &kp N9    &kp N0  &kp BSPC
&trans   &kp LGUI     &trans     &trans        &cs    &kp TAB     &trans      &trans            &trans      &trans  &kp RGUI    &trans
&trans  &kp EQUAL  &kp MINUS  &kp GRAVE  &kp UNDER    &kp ESC     &trans  &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp BSLH    &trans
                               &kp LGUI     &trans  &kp SPACE    &kp RET      &trans            &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // | TAB  |  F1 |  F2  |  F3  |  F4  |  F5  |   |   F6  |  F7  |  F8 |  F9 |  F10 |   DEL |
            // | CTRL | F11 |  F12 | MUTE | VOL- | VOL+ |   |  MENU |  LFT |  UP | RGT | PGUP | PSCRN |
            // | SHFT |     |      |      |      |      |   | PSCRN | HOME | DWN | END | PGDN | K_PWR |
            //                     |      |      |  SPC |   |  ENT  |      |     |

            label = "ue";

            //上, upper

            bindings = <
&kp TAB   &kp F1   &kp F2        &kp F3        &kp F4      &kp F5         &kp F6    &kp F7    &kp F8     &kp F9    &kp F10    &kp DEL
 &trans  &kp F11  &kp F12  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_MUTE    &kp K_CMENU  &kp LEFT    &kp UP  &kp RIGHT  &kp PG_UP  &kp PSCRN
 &trans   &trans   &trans        &trans        &trans       &to 4      &kp PSCRN  &kp HOME  &kp DOWN    &kp END  &kp PG_DN  &kp C_PWR
                                 &trans        &trans   &kp SPACE        &kp RET    &trans    &trans
            >;
        };

        bt_layer {
            // -----------------------------------------------------------------------------------------
            // |    | PWR |     |     |     |     |   |      |     |     |     |     |     |
            // |    | BT0 | BT1 | BT2 | BT3 | BT4 |   | BGT+ |     |     |     |     |     |
            // |    |     |     | PRV | NXT | CLR |   | BGT- |     |     |     |     |     |
            //                  |     |     | SPC |   |      |     |     |

            label = "paso";

            // bluetooth controls and other PC controls

            bindings = <
&trans   &kp C_POWER   &kp K_POWER        &trans        &trans        &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp C_BRIGHTNESS_INC  &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans    &bt BT_PRV    &bt BT_NXT    &bt BT_CLR    &kp C_BRIGHTNESS_DEC  &trans  &trans  &trans  &trans  &trans
                                          &trans        &trans        &trans                  &trans  &trans  &trans
            >;
        };

        // id: 4

        game_layer {
            // -----------------------------------------------------------------------------------------
            // | ESC |  TAB |  Q  |  W  |  E  |  R  |   |     |  A  |  P  |  E  |   X   | LY0 |
            // |  Y  | SHFT |  A  |  S  |  D  |  F  |   |     |     |     |     |       |     |
            // | ALT | CTRL |  Z  |  X  |  T  |  B  |   |     |     |     |     | PSCRN |     |
            //                    | LY5 | SPC |  3  |   |     |     |     |

            label = "game";

            // WASD LAYER

            bindings = <
 &kp ESC     &kp TAB  &kp Q   &kp W      &kp E  &kp R    &none  &kp A  &kp P  &kp E      &kp X  &to 0
   &kp Y  &kp LSHIFT  &kp A   &kp S      &kp D  &kp F    &none  &none  &none  &none      &none  &none
&kp LALT   &kp LCTRL  &kp Z   &kp X      &kp T  &kp B    &none  &none  &none  &none  &kp PSCRN  &none
                             &kp N3  &kp SPACE  &mo 5    &none  &none  &none
            >;
        };

        // id: 5

        game_layer_2 {
            // -----------------------------------------------------------------------------------------
            // |    |  5  |  1  |     |  2  |  4  |   |     |     |     |     |     |     |
            // |    |     |     |     |     |  G  |   |     |     |     |     |     |     |
            // |    |     |     |     |  6  |     |   |     |     |     |     |     |     |
            //                  |     |     | SPC |   |     |     |     |

            label = "game2";

            // helper layer for numrow etc.

            bindings = <
&kp N6  &kp N5  &kp N1  &trans  &kp N2  &kp N4    &none  &none  &none  &none  &none  &none
&kp F1  &trans  &trans  &trans  &trans   &kp G    &none  &none  &none  &none  &none  &none
 &none   &none   &none   &none   &kp C   &kp V    &none  &none  &none  &none  &none  &none
                        &trans  &trans   &none    &none  &none  &none
            >;
        };
    };
};
