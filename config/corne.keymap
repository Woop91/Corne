/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


#define AS(keycode) &as LS(keycode) keycode

/ {
    chosen {
      zmk,matrix_transform = &five_column_transform;
    };

    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  F  |  P  |  B  |     |  J  |  L   |  U   |  Y   | ; |
// |  A  |  R  |  S  |  T  |  G  |     |  M  |  N   |  E   |  I   | O | 
// |  Z  |  X  |  C  |  D  |  V  |     |  K  |  H   | CTRL | META | . |
//             | GUI | LWR | SPC |     | ENT | RSE  | BSPC |
                        display-name = "Base";
                        bindings = <
   &kp Q &kp W &kp F &kp P &kp B     &kp J   &kp L  &kp U     &kp Y     &kp SEMI
   &kp A &kp R &kp S &kp T &kp G     &kp M   &kp N  &kp E     &kp I     &kp O
   &kp Z &kp X &kp C &kp D &kp V     &kp K   &kp H  &kp LCTL  &kp RALT  AS(DOT)
        &mo 1   &mo 2    &kp ESC     &kp SPACE  &kp RET  &kp LEFT_GUI
                        >;
                };

                lower_layer {
// -----------------------------------------------------------------------------------------
// |  !  |  @  |  #  |  $  |   %  |                    |  *   |  7  |  8  |  9 |     |      
// |  _  |  \  | "|" |     |  CLR |                    |  -   |  4  |  5  |  6 |  0  |   
// |     |     |  ,  |  .  |   =  |                    |  +   |  1  |  2  |  3 |  /  |    
//              |     |    |  ESC |                    | SPC | ALTE/NT |  0 |
                        display-name = "Lower";
                        bindings = <
   &kp EXCL   &kp AT    &kp HASH   &kp DLLR  &kp PRCNT         &kp KP_MULTIPLY &kp N7   &kp N8  &kp N9  &kp BACKSPACE
   &kp UNDER  &kp BSLH  &kp PIPE   &trans    &kp KP_CLEAR      &kp MINUS       &kp N4   &kp N5  &kp N6  &kp N0 
   &kp K_APP  &trans    &kp COMMA  &kp DOT   &kp EQUAL         &kp PLUS        &kp N1   &kp N2  &kp N3  &kp LBRC       
                        &mo 1      &mo 2     &kp ESC           &kp SPACE       &kp RET  &kp N0
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB         |  PG_up   |  BWRSR BCK  |   UP   |  BWRSR FWD  |   bRIGHTNESS - |                       | BRI_UP |   Prev  |       |  Next | PNTSCRN |
// |  CAPS Shift  |  PG_dwn  |    LFT      |   DWN  |    RGT      |   PRINT SCREEN |                       |   RW   |   PP    |  FF   |  LEFT | RIGHT   |
// |  CONTROL     |   REDO   |   UNDO      |   CUT  |   COPY      |   PASTE        |                       |        |   VOL - |  MUTE |  VOL +|         |
//                                                              |  RSE| LWR  | ESC |                       | SPC | ALTE/NT | GUI |

                        display-name = "Raise";
                        bindings = <

   &kp PG_UP    &kp C_AC_BACK  &kp UP          &kp C_AC_FORWARD  &kp C_BRI_DN        AS(N6)    AS(N7)    AS(N8)    AS(N9)   AS(N0)
   &kp PG_DN    &kp LEFT       &kp DOWN_ARROW  &kp RIGHT         &kp PRINTSCREEN      &kp RPAR  &kp RBKT  &kp RBRC  AS(FSLH) AS(BSLH)
   AS(GRAVE) &trans    &trans    AS(COMMA) &kp COLON     &kp SEMI  AS(DOT)   &kp LCTRL &kp RALT &trans
                       &kp LGUI  &kp ESC   &kp SPACE     AS(RET)   &trans    &kp TAB
                        >;
                };
        };
};     
        
