
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>



/ {
        behaviors {
          tp: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
          }; 
        };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | TAB  |  Q      |  W      |  F     |  P Print|    B         |                              |  J  |  L   |  U  |  Y  |  ;  | ESC |
            // | SHFT |  A      |  R      |  S     |  T      |    G         |                              |  M  |  N   |  E  |  I  |  O  |  '   |
            // | CTRL |  Z Redo |  X Undo |  C Cut |  D Copy |    V  Paste  |                              |  K  |  H   |  ,  |  .  |  /  | ALT |
            //                                     |  RSE| LWR  | ALT/ENT |                                 | SPC | BKSP | GUI |

            bindings = <
&tp LA(TAB) TAB  &kp Q        &kp W        &kp F        &tp LC(P) P  &kp B          &kp J     &kp L         &kp U      &kp Y    &kp SEMI  &kp ESC
&kp LSHFT        &kp A        &kp R        &kp S        &kp T        &kp G          &kp M     &kp N         &kp E      &kp I    &kp O     &kp SQT
&kp LCTRL        &tp LC(Y) Z  &tp LC(Z) X  &tp LC(X) C  &tp LC(C) D  &tp LC(V) V    &kp K     &kp H         &kp COMMA  &kp DOT  &kp FSLH  &kp LALT
                                           &mo 1        &mo 2        &kp SPACE      &kp BSPC  &tp LALT RET  &kp LGUI
            >;
        };

        layer_above {
            // -----------------------------------------------------------------------------------------
            // |  ~   |  !  |  @  |  #  |  $  |   %  |          |  *   |  7  |  8  |  9 | (   |  )  |       
            // |  &   |  _  |  \  | "|" |     |  CLR |          |  +   |  4  |  5  |  6 |   [ |  ]  |   
            // |  ??  |     |     |  ,  |  .  |   =  |          |  -   |  1  |  2  |  3 |  {  |  }  |    
            //                   |     |    |  ENT |            | SPC | BKSP|  0 |

            bindings = <
&kp TILDE  &kp EXCL   &kp AT    &kp HASH   &kp DLLR  &kp PRCNT       &kp KP_MULTIPLY  &kp N7    &kp N8  &kp N9  &kp LPAR  &kp RPAR
&kp AMPS   &kp UNDER  &kp BSLH  &kp PIPE   &trans    &kp KP_CLEAR    &kp PLUS         &kp N4    &kp N5  &kp N6  &kp LBKT  &kp RBKT
&kp K_APP  &tog 3     &trans    &kp COMMA  &kp DOT   &kp EQUAL       &kp MINUS        &kp N1    &kp N2  &kp N3  &kp LBRC  &kp RBRC
                                &trans     &trans    &kp RET         &kp SPACE        &kp BSPC  &kp N0
            >;
        };

        layer_below {
            // -----------------------------------------------------------------------------------------
            // |  F1  |  F2  |  F3  |  F4  |  F5   | F6     |                      |    LFT    |     DWN   |     UP    |     RGT      |  Prev    |  Next  |
            // |  F7  |  F8  |  F9  |  F10 |  F11  | F12    |                      | BWRSR BCK |   PG_dwn  |   PG_up   |   BWRSR FWD  |  BRI_DN  | BRI_UP | 
            // |  BT0 |  BT1 |  BT2 |  BT3 |  BT4  |        |                      |   TAB     |   Vol -   |    Vol +  |     TAB      |    RW    |   FF   |
            //                 |        |  ENT     |     |                        |   MUTE    |    PP     |   PNTSCRN   |

            bindings = <
&kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6        &kp LEFT         &kp DOWN      &kp UP           &kp RIGHT         &kp C_PREV    &kp C_NEXT
&kp F7        &kp F8        &kp F9        &kp F10       &kp F11       &kp F12       &kp C_AC_BACK    &kp PG_DN     &kp PG_UP        &kp C_AC_FORWARD  &kp C_BRI_DN  &kp C_BRI_UP
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR    &kp LC(LS(TAB))  &kp C_VOL_DN  &kp C_VOL_UP     &kp LC(TAB)       &kp C_RW      &kp C_FF
                                          &trans        &trans        &kp RET       &kp C_MUTE       &kp C_PP      &kp PRINTSCREEN
            >;
        };

        super_ {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E      &kp R     &kp T       &kp Y      &kp U      &kp I      &kp O    &kp P     &kp BSPC
&kp CAPS   &kp A  &kp S  &kp D      &kp F     &kp G       &kp H      &kp J      &kp K      &kp L    &kp SEMI  &kp APOS
&kp LSHFT  &kp Z  &kp X  &kp C      &kp V     &kp B       &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                         &kp LCTRL  &kp LALT  &kp LGUI    &kp SPACE  &kp ENTER  &kp ESC
            >;
        };
    };
};
