
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>


/ {
        behaviors {
          tp: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
          }; 
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | TAB  |  Q  |  W  |  F  |  P  |    B    |   |  J  |  L   |  U  |  Y  |  ;  | ESC |
// | SHFT |  A  |  R  |  S  |  T  |    G    |   |  M  |  N   |  E  |  I  |  O  |  '   |
// | CTRL |  Z  |  X  |  C  |  D  |    V    |   |  K  |  H   |  ,  |  .  |  /  | ALT |
//                    |  RSE| GUI | ALT/ENT |   | SPC | BKSP | LWR |
                        bindings = <
   &kp TAB    &kp Q &kp W &kp F    &kp P &kp B             &kp J &kp L  &kp U     &kp Y   &kp SEMI  &kp ESC
   &kp LSHFT  &kp A &kp R &kp S    &kp T &kp G             &kp M &kp N  &kp E     &kp I   &kp O     &kp SQT
   &kp LCTRL  &kp Z &kp X &kp C    &kp D &kp V             &kp K &kp H  &kp COMMA &kp DOT &kp FSLH  &kp RALT 
                  &mo 1 &kp LGUI  &tp LALT RET             &kp SPACE    &kp BSPC  &mo 2
                        >;
                };

                layer_above {
// -----------------------------------------------------------------------------------------
// |  ~   |  !  |  @  |  #  |  $  |  %  |            |  1  |  2  |  3 | (   |  )  |   \   |
// |  &   |     |  _  |  +  |  -  | CLR |            |  4  |  5  | 6  |   [ |  ]  |  "|"  |  
// |      |     |     |  *  |  %  |  =  |            |  7  |  8  | 9  |  {  |  }  |       |
//                    |  .  |  ,  | ENT |            | SPC | BKSP|  0 |
                        bindings = <
   &kp TILDE  &kp EXCL    &kp AT      &kp HASH          &kp DLLR   &kp PRCNT            &kp N1 &kp N2 &kp N3 &kp LPAR &kp RPAR &kp BSLH
   &kp AMPS   &trans      &kp UNDER   &kp PLUS          &kp MINUS  &kp KP_CLEAR               &kp N4 &kp N5 &kp N6 &kp LBKT &kp RBKT &kp PIPE
   &trans     &trans      &trans      &kp KP_MULTIPLY   &kp PRCNT  &kp EQUAL            &kp N7 &kp N8 &kp N9 &kp LBRC &kp RBRC &trans 
                                      &kp DOT           &kp COMMA  &kp RET              &kp SPACE &kp BSPC  &kp N0


                        >;
                };

                layer_below {
// -----------------------------------------------------------------------------------------
// |     | UP  |     | TAB       |  PG_up   | TAB       |              |  Vol + |  MUTE   |  Vol -  |     |     | ESC     |
// | LFT | DWN | RGT | BWRSR BCK |  PG_dwn  | BWRSR FWD |              |  Prev  |  Next   |         |     |     | BRI_UP  |
// |     |     |     |           |          |           |              |   RW   |  FF     |         |     |     | C_BRI_DN|
//                   |   PSCRN  |  ENT     | rclick    |               |        |  PP     |         | 
                        bindings = <
   &trans    &kp UP     &trans     &kp LC(TAB)     &kp PG_UP    &kp LC(LS(TAB))                  &trans       &trans        &trans        &trans    &trans     &kp ESC             
   &kp LEFT  &kp DOWN   &kp RIGHT  &kp C_AC_BACK   &kp PG_DN    &kp C_AC_FORWARD                 &kp C_PREV   &kp C_NEXT    &kp C_VOL_DN  &trans    &trans     &kp C_VOL_UP                                       
   &trans    &kp LCTRL LSHFT TAB   &trans     &trans          &trans       &trans                &kp C_RW     &kp C_FF      &kp C_MUTE    &trans    &trans     &kp C_BRI_DN      
                                &kp PRINTSCREEN    &kp K_APP    &kp RET                          &trans       &kp C_PP      &trans      
                        >;        
                };
        };
};
       
