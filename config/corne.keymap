/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        tp: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | TAB  |  Q      |  W      |  F     |  P Print|    B         |                              |  J  |  L   |  U  |  Y  |  ;  | ESC |
            // | SHFT |  A      |  R      |  S     |  T      |    G         |                              |  M  |  N   |  E  |  I  |  O  |  '   |
            // | CTRL |  Z Redo |  X Undo |  C Cut |  D Copy |    V  Paste  |                              |  K  |  H   |  ,  |  .  |  /  | ALT |
            //                                     |  RSE| GUI | ALT/ENT |                                 | SPC | BKSP | LWR |

            bindings = <
&tp LA(TAB) TAB  &kp Q        &kp W        &kp F        &tp LC(P) P  &kp B           &kp J      &kp L     &kp U      &kp Y    &kp SEMI  &kp ESC
&kp LSHFT        &kp A        &kp R        &kp S        &kp T        &kp G           &kp M      &kp N     &kp E      &kp I    &kp O     &kp SQT
&kp LCTRL        &tp LC(Y) Z  &tp LC(Z) X  &tp LC(X) C  &tp LC(C) D  &tp LC(V) V     &kp K      &kp H     &kp COMMA  &kp DOT  &kp FSLH  &kp LALT
                                           &mo 1        &kp LGUI     &tp LALT RET    &kp SPACE  &kp BSPC  &mo 2
            >;
        };

        layer_above {
            // -----------------------------------------------------------------------------------------
            // |  ~   |  !  |  @  |  #  |  $  |  %  |            |  1  |  2  |  3 | (   |  )  |   \   |
            // |  &   |     |  _  |  +  |  -  | CLR |            |  4  |  5  | 6  |   [ |  ]  |  "|"  |  
            // |      |     |     |  *  |  %  |  =  |            |  7  |  8  | 9  |  {  |  }  |       |
            //                    |  .  |  ,  | ENT |            | SPC | BKSP|  0 |

            bindings = <
&kp TILDE  &kp EXCL  &kp AT     &kp HASH         &kp DLLR   &kp PRCNT       &kp N1     &kp N2    &kp N3  &kp LPAR  &kp RPAR  &kp BSLH
&kp AMPS   &trans    &kp UNDER  &kp PLUS         &kp MINUS  &kp KP_CLEAR    &kp N4     &kp N5    &kp N6  &kp LBKT  &kp RBKT  &kp PIPE
&trans     &trans    &trans     &kp KP_MULTIPLY  &kp PRCNT  &kp EQUAL       &kp N7     &kp N8    &kp N9  &kp LBRC  &kp RBRC  &trans
                                &kp DOT          &kp COMMA  &kp RET         &kp SPACE  &kp BSPC  &kp N0
            >;
        };

        layer_below {
            // -----------------------------------------------------------------------------------------
            // |      | UP  |     |   TAB     |  PG_up   | TAB       |                         |  Vol + |  MUTE  |  Vol -  |     |           | ESC     |
            // |  LFT | DWN | RGT | BWRSR BCK |  PG_dwn  | BWRSR FWD |                         |  Prev  |  Next  |         |     |  RGB ON   | BRI_UP  |
            // |BT CLR| BT1 | BT2 |   BT3     |   BT4    | BT5       |                         |   RW   |  FF    |         |     |  BL ON    | C_BRI_DN|
            //                     |   PSCRN  |  ENT     | rclick    |                         |        |  PP    |         | 

            bindings = <
&trans      &kp UP        &trans        &kp LC(LS(TAB))  &kp PG_UP     &kp LC(TAB)         &kp C_VOL_UP  &kp C_VOL_DN  &kp C_MUTE  &trans          &trans  &kp ESC
&kp LEFT    &kp DOWN      &kp RIGHT     &kp C_AC_BACK    &kp PG_DN     &kp C_AC_FORWARD    &kp C_PREV    &kp C_NEXT    &trans      &rgb_ug BL_ON   &trans  &kp C_BRI_UP
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2     &bt BT_SEL 3  &bt BT_SEL 4        &kp C_RW      &kp C_FF      &trans      &rgb_ug RGB_ON  &trans  &kp C_BRI_DN
                                        &kp PRINTSCREEN  &kp K_APP     &kp RET             &trans        &kp C_PP      &trans
            >;
        };

        Sweep {
            bindings = <
&kp TAB           &kp Q  &kp W  &kt F    &kp P  &kp B    &kp J      &kp L      &kp U           &kp Y       &kp DELETE  &kp SEMICOLON
&kp CAPSLOCK      &kp A  &kp R  &kp S    &kp T  &kp G    &kp M      &kp N      &kt E           &kp I       &kp O       &kp SQT
&kp LEFT_CONTROL  &kp Z  &kt X  &kp C    &kp D  &kp V    &kp K      &kp H      &kp COMMA       &kp PERIOD  &kp SLASH   &kp LEFT_ALT
                                &kp ESC  &mo 1  &mo 2    &kp SPACE  &kp ENTER  &kp LEFT_SHIFT
            >;
        };
    };
};
