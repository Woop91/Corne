/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
//-------------------------------------------------------INCLUDE AREA-----------------------------------------------------------------------------------------------

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/rgb.h>

//-------------------------------------------------------COMBO-1-----------------------------------------------------------------------------------------------

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <10 9>;
            bindings = <&kp ESC>;
        };

        combo_money {
            timeout-ms = <50>;
            key-positions = <18 30>;
            bindings = <&kp DLLR>;
        };

        combo_and {
            timeout-ms = <50>;
            key-positions = <13 19>;
            bindings = <&kp AMPERSAND>;
        };

        combo_AT {
            timeout-ms = <50>;
            key-positions = <13 16>;
            bindings = <&kp AT_SIGN>;
        };

        combo_EXCL {
            timeout-ms = <50>;
            key-positions = < 21 22>;
            bindings = <&kp EXCLAMATION>;
        };

        combo_htag {
            timeout-ms = <50>;
            key-positions = < 6 7>;
            bindings = <&kp HASH>;
        };

        combo_qwerty {
            timeout-ms = <50>;
            key-positions = <1 2 3 4 >;
            bindings = <&tog 3 CLCK>;
        };

        combo_BC {
            timeout-ms = <50>;
            key-positions = <15 14>;
            bindings = <&kp LEFT_PARENTHESIS>;
        };

        combo_BB {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&kp RIGHT_PARENTHESIS>;
        };

        combo_fnbt {
            timeout-ms = <50>;
            key-positions = <7 8 9 10>;
            bindings = <&mo 4>;
        };

        Talt {
            bindings = <&kp LEFT_ALT>;
            key-positions = <40 39>;
        };

        Deltl {
            bindings = <&kp BACKSPACE>;
            key-positions = <19 20>;
        };

        Ente {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <18 19>;
        };

        Fdel2 {
            bindings = <&kp DEL>;
            key-positions = <18 19 20>;
        };

        Div {
            bindings = <&kp DQT>;
            key-positions = <7 6>;
        };

        Ctrltmb {
            bindings = <&kp LEFT_CONTROL>;
            key-positions = <37 38>;
        };

        Trial {
            bindings = <&kp C_QUIT>;
            key-positions = <0 2 1>;
        };

        };

        Trial4 {
            bindings = <&bootloader>;
            key-positions = <>;
        };

        eqls {
            bindings = <&kp KP_EQUAL>;
            key-positions = <15 16 14>;
        };

        plus {
            bindings = <&kp KP_PLUS>;
            key-positions = <21 20 19>;
        };

        slash {
            bindings = <&kp KP_DIVIDE>;
            key-positions = <4 5>;
        };

        equals2 {
            bindings = <&kp EQUAL>;
            key-positions = <28 29>;
        };

        lcontrol {
            bindings = <&kp LEFT_CONTROL>;
            key-positions = <25 26>;
        };

        lcaps {
            bindings = <&kp CAPS>;
            key-positions = <13 14>;
        };

        ltab {
            bindings = <&kp TAB>;
            key-positions = <1 2>;
        };

        dquotes {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <16 17>;
        };

        blank {
            bindings = <&kp TAB>;
            key-positions = <3 4>;
        };

        blank2 {
            bindings = <&kp CAPSLOCK>;
            key-positions = <15 16>;
        };

        blank3 {
            bindings = <&kp LEFT_CONTROL>;
            key-positions = <28 27>;
        };

        blank4 {
            bindings = <&kp NUMBER_3>;
            key-positions = <18 19>;
        };
    };
};


#define AS(keycode) &as LS(keycode) keycode

/ {
    chosen {
      zmk,matrix_transform = &five_column_transform;
    };

    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  F  |  P  |  B  |     |  J  |  L   |  U   |  Y   | ; |
// |  A  |  R  |  S  |  T  |  G  |     |  M  |  N   |  E   |  I   | O | 
// |  Z  |  X  |  C  |  D  |  V  |     |  K  |  H   | CTRL | META | . |
//             | GUI | LWR | SPC |     | ENT | RSE  | BSPC |
                        display-name = "Base";
                        bindings = <
   &kp Q &kp W &kp F &kp P &kp B     &kp J   &kp L  &kp U     &kp Y     &kp SEMI
   &kp A &kp R &kp S &kp T &kp G     &kp M   &kp N  &kp E     &kp I     &kp O
   &kp Z &kp X &kp C &kp D &kp V     &kp K   &kp H  &kp LCTL  &kp RALT  AS(DOT)
        &mo 1   &mo 2    &kp ESC     &kp SPACE  &kp RET  &kp LEFT_GUI
                        >;
                };

                lower_layer {
// -----------------------------------------------------------------------------------------
// |  !  |  @  |  #  |  $  |   %  |                    |  *   |  7  |  8  |  9 |     |      
// |  _  |  \  | "|" |     |  CLR |                    |  -   |  4  |  5  |  6 |  0  |   
// |     |     |  ,  |  .  |   =  |                    |  +   |  1  |  2  |  3 |  /  |    
//              |     |    |  ESC |                    | SPC | ALTE/NT |  0 |
                        display-name = "Lower";
                        bindings = <
   &kp EXCL   &kp AT    &kp HASH   &kp DLLR  &kp PRCNT         &kp KP_MULTIPLY &kp N7   &kp N8  &kp N9  &kp BACKSPACE
   &kp UNDER  &kp BSLH  &kp PIPE   &trans    &kp KP_CLEAR      &kp MINUS       &kp N4   &kp N5  &kp N6  &kp N0 
   &kp K_APP  &trans    &kp COMMA  &kp DOT   &kp EQUAL         &kp PLUS        &kp N1   &kp N2  &kp N3  &kp LBRC       
                        &mo 1      &mo 2     &kp ESC           &kp SPACE       &kp RET  &kp N0
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB         |  PG_up   |  BWRSR BCK  |   UP   |  BWRSR FWD  |   bRIGHTNESS - |                       | BRI_UP |   Prev  |       |  Next | PNTSCRN |
// |  CAPS Shift  |  PG_dwn  |    LFT      |   DWN  |    RGT      |   PRINT SCREEN |                       |   RW   |   PP    |  FF   |  LEFT | RIGHT   |
// |  CONTROL     |   REDO   |   UNDO      |   CUT  |   COPY      |   PASTE        |                       |        |   VOL - |  MUTE |  VOL +|         |
//                                                              |  RSE| LWR  | ESC |                       | SPC | ALTE/NT | GUI |

                        display-name = "Raise";
                        bindings = <

   &kp PG_UP    &kp C_AC_BACK  &kp UP          &kp C_AC_FORWARD  &kp C_BRI_DN            &kp C_BRI_UP  &kp C_PREV    &trans        &kp C_NEXT       &kp PRINTSCREEN  
   &kp PG_DN    &kp LEFT       &kp DOWN_ARROW  &kp RIGHT         &kp PRINTSCREEN         &kp C_RW      &kp C_PP      &kp C_FF      &kp LEFT         &kp RIGHT
   AS(GRAVE)    &trans         &trans          AS(COMMA)         &kp COLON               &trans        &kp C_VOL_DN  &kp C_MUTE    &kp C_VOL_UP     &trans           
                                              &kp LGUI  &kp ESC   &kp SPACE              AS(RET)   &trans    &kp TAB

                        >;
                };

                layer_fnbt {
//----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//|  F1  |  F2  |  F3  |  F4  |  F5  |  F16    |	          |     |         |     |    |    |    |    								   
//|  F7  |  F8  |  F9  |  F10 |  F11 |  F12    |              |     |         |     |    |    |    |      
//|  BT0 |  BT1 |  BT2 |  BT3 |  BT4 |BT CLEAR |              |     |         |     |    |    |    |      
// 			           |  RSE |  LWR |   ESC   |              | SPC | ALTE/NT | GUI |

                        display-name = "FNBT";
                        bindings = <

   &kp PG_UP    &kp C_AC_BACK  &kp UP          &kp C_AC_FORWARD  &kp C_BRI_DN            &kp C_BRI_UP  &kp C_PREV    &trans        &kp C_NEXT       &kp PRINTSCREEN  
   &kp PG_DN    &kp LEFT       &kp DOWN_ARROW  &kp RIGHT         &kp PRINTSCREEN         &kp C_RW      &kp C_PP      &kp C_FF      &kp LEFT         &kp RIGHT
   AS(GRAVE)    &trans         &trans          AS(COMMA)         &kp COLON               &trans        &kp C_VOL_DN  &kp C_MUTE    &kp C_VOL_UP     &trans           
                                              &kp LGUI  &kp ESC   &kp SPACE              AS(RET)   &trans    &kp TAB

                    >;
            };
    };
};     
